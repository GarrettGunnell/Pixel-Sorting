#pragma kernel CS_CreateMask
#pragma kernel CS_TestSelectionSort

float _LowThreshold, _HighThreshold;

RWTexture2D<float> _Mask;
RWTexture2D<float4> _ColorBuffer;
RWTexture2D<float4> _SortedBuffer;

RWStructuredBuffer<int> _NumberBuffer;

float luminance(float3 color) {
    return dot(color, float3(0.299f, 0.587f, 0.114f));
}

[numthreads(8,8,1)]
void CS_CreateMask(uint3 id : SV_DispatchThreadID) {
    float4 col = saturate(_ColorBuffer[id.xy]);
    float l = luminance(col.rgb);

    float result = 1.0f;
    if (l < _LowThreshold || _HighThreshold < l)
        result = 0.0f;
    
    _Mask[id.xy] = result;
}

// Selection Sort, so performant!!!!
[numthreads(1,1,1)]
void CS_TestSelectionSort(uint3 id : SV_DISPATCHTHREADID) {
    int n = 16;

    for (int i = 0; i < n - 1; ++i) {
        int minIndex = i;
        for (int j = i + 1; j < n; ++j) {
            if (_NumberBuffer[j] < _NumberBuffer[minIndex])
                minIndex = j;
        }

        int temp = _NumberBuffer[minIndex];
        _NumberBuffer[minIndex] = _NumberBuffer[i];
        _NumberBuffer[i] = temp;
    }
}